{
  "openapi": "3.0.3",
  "info": {
    "title": "Sample OpenAPI for Web 69",
    "description": "Just checking out how it works",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https"
    }
  ],
  "paths": {
    "/words": {
      "get": {
        "description": "Returns all words available",
        "responses": {
          "200": {
            "description": "words are delivered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": []
    },
    "/words/{letters}": {
      "get": {
        "description": "Returns all words available",
        "responses": {
          "200": {
            "description": "words are delivered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "letters",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Letters as string, which words may contain; e. g. abcdot => returns e. g. boot"
        }
      ]
    },
    "/words/{letters}/{length}": {
      "get": {
        "description": "Returns all words available",
        "responses": {
          "200": {
            "description": "words are delivered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              }
            }
          }
        }
      },
      "parameters": [
        {
          "in": "path",
          "name": "letters",
          "schema": {
            "type": "string"
          },
          "required": true,
          "description": "Letters as string, which words may contain; e. g. abcdot => returns e. g. boot"
        },
        {
          "in": "path",
          "name": "length",
          "schema": {
            "type": "integer"
          },
          "required": true,
          "description": "Length of word: e. g. 3 returns words with 3 letters"
        }
      ]
    }
  }
}
